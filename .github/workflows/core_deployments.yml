name: Android CD

on:
  push:
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+_core' ]

jobs:
  check_tag:
    runs-on: ubuntu-latest
    outputs:
      # Define an output variable that the next job will use in its 'if' condition.
      match_status: ${{ steps.regex_check.outputs.is_valid }}

    steps:
      - name: Get Tag Name
        id: get_tag
        # The tag name is automatically available as github.ref_name
        run: echo "TAG_NAME=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Perform Regex Check
        id: regex_check
        # We use Bash's native =~ operator for true Regular Expression matching.
        run: |
          TAG_NAME="${{ steps.get_tag.outputs.TAG_NAME }}"

          # --- REGEX PATTERN ---
          # This pattern matches tags like v1.0.0, v2.5.12, but NOT v1.0.0-beta or just 1.0.0.
          # Pattern: ^v[0-9]+\.[0-9]+\.[0-9]+_core$
          # Note: Double backslashes are used for escaping the dot in shell scripts.
          REGEX_PATTERN="^v[0-9]+\\.[0-9]+\\.[0-9]+_core$"
          # ---------------------

          echo "Checking tag: $TAG_NAME against pattern: $REGEX_PATTERN"

          if [[ "$TAG_NAME" =~ $REGEX_PATTERN ]]; then
            echo "::notice title=Regex Match::Tag is a valid release candidate."
            echo "is_valid=true" >> $GITHUB_OUTPUT
          else
            echo "::warning title=Regex Mismatch::Tag does NOT match the required pattern. Skipping release job."
            echo "is_valid=false" >> $GITHUB_OUTPUT
          fi

  core-deploy:
    name: Build & Sign AAB
    runs-on: ubuntu-latest
    needs: check_tag

    # CRITICAL: The job will be skipped if the condition is not met.
    if: needs.check_tag.outputs.match_status == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle Cache
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Build Release with Gradle
        run: ./gradlew clean core:assembleRelease

      - name: Build Release with Gradle
        run: ./gradlew publish

      - run: echo Build status report=${{ job.status }}