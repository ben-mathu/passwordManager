plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.google.services)
    alias(libs.plugins.firebase.crashlytics)
    alias(libs.plugins.dagger.hilt)
}

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

def keyProperties = new Properties()

def keyFile = rootProject.file("key.properties")
if (keyFile.exists()) keyProperties.load(new FileInputStream(keyFile))

android {
    compileSdk 35

    defaultConfig {
        applicationId "com.benatt.passwordsmanager"
        minSdkVersion 24
        targetSdk 35
        versionCode 37
        versionName "5.1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding true
        viewBinding true
        buildConfig true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    signingConfigs {
        release {
            if (keyFile.exists()) {
                storeFile file(keyProperties.getProperty("storeFile"))
                storePassword keyProperties.getProperty("storePassword")
                keyAlias keyProperties.getProperty("keyAlias")
                keyPassword keyProperties.getProperty("storePassword")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable true
            if (keyFile.exists()) signingConfig = signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "ALIAS", "\"${localProperties["key_alias"] ?: ""}\""
            buildConfigField "String", "PREV_ALIAS", "\"${localProperties["prev_key_alias"] ?: ""}\""
            buildConfigField "String", "MIGRATING_VERSION", "\"${localProperties["migrating_version"] ?: ""}\""
            buildConfigField "String", "CLIENT_ID", "\"${localProperties["CLIENT_ID"] ?: ""}\""
        }

        debug {
            buildConfigField "String", "ALIAS", "\"${localProperties["key_alias"] ?: ""}\""
            buildConfigField "String", "PREV_ALIAS", "\"${localProperties["prev_key_alias"] ?: ""}\""
            buildConfigField "String", "MIGRATING_VERSION", "\"${localProperties["migrating_version"] ?: ""}\""
            buildConfigField "String", "CLIENT_ID", "\"${localProperties["CLIENT_ID"] ?: ""}\""
        }
    }

    configurations {
        configureEach { // You should exclude one of them not both of them
            exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }

    namespace 'com.benatt.passwordsmanager'
}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])
    implementation project(":core")
    implementation(libs.androidx.appcompat)
    implementation(libs.androidx.constraintlayout)
    implementation(libs.androidx.navigation.fragment)
    implementation(libs.androidx.navigation.ui)
    implementation(libs.androidx.core)
    implementation(libs.androidx.lifecycle.viewmodel)

    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.test.junit)
    androidTestImplementation(libs.androidx.test.espresso)

    implementation(libs.google.material)

    // Dagger
    implementation(libs.hilt.android)
    annotationProcessor(libs.hilt.compiler)

    // Room
    implementation(libs.androidx.room.runtime)
    implementation(libs.androidx.room.rxjava2)
    annotationProcessor(libs.androidx.room.compiler)
    // RxJava
    implementation(libs.rxandroid)
    implementation(libs.rxjava)

    implementation(libs.androidx.fragment)

    // Gson
    implementation(libs.gson)

    implementation(libs.google.play.services.auth)

    implementation(libs.google.api.services.drive)
    implementation(libs.credentials)
    implementation(libs.credentials.auth)
    implementation(libs.googleId)

    implementation(libs.google.api.client.android)

    implementation(libs.google.http.client.gson)

    implementation platform(libs.firebase.bom)
    implementation(libs.firebase.analytics)
    implementation(libs.firebase.crashlytics)

    implementation(libs.google.auth.oauth2.http)

    implementation(libs.androidx.lifecycle.extensions)
    implementation(libs.androidx.lifecycle.viewmodel)
    implementation(libs.androidx.lifecycle.runtime)

    // Preferences
    implementation(libs.preferences)

    // Flex Layout
    implementation libs.flexbox
}
