// Generated by Dagger (https://dagger.dev).
package com.benatt.passwordsmanager.di.components;

import com.benatt.passwordsmanager.data.models.passwords.PasswordRepository;
import com.benatt.passwordsmanager.data.models.user.UserRepository;
import com.benatt.passwordsmanager.di.modules.DbModule;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerRepositoryInjector implements RepositoryInjector {
  private DaggerRepositoryInjector() {

  }

  public static Builder builder() {
    return new Builder();
  }

  public static RepositoryInjector create() {
    return new Builder().build();
  }

  @Override
  public void inject(UserRepository userRepo) {
  }

  @Override
  public void inject(PasswordRepository passwordRepository) {
  }

  public static final class Builder {
    private Builder() {
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder dbModule(DbModule dbModule) {
      Preconditions.checkNotNull(dbModule);
      return this;
    }

    public RepositoryInjector build() {
      return new DaggerRepositoryInjector();
    }
  }
}
